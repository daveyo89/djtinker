###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /usr/src/djtinker

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev jpeg-dev zlib-dev tiff-dev libjpeg-turbo-dev
# lint
RUN pip install --upgrade pip

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/djtinker/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the djtinker user
RUN mkdir -p /home/djtinker

# create the djtinker user
RUN addgroup -S djtinker && adduser -S djtinker -G djtinker

# create the appropriate directories
ENV HOME=/home/djtinker
ENV APP_HOME=/home/djtinker/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq jpeg-dev zlib-dev tiff-dev libjpeg-turbo-dev
COPY --from=builder /usr/src/djtinker/wheels /wheels
COPY --from=builder /usr/src/djtinker/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the djtinker user
RUN chown -R djtinker:djtinker $APP_HOME

# change to the djtinker user
USER djtinker

# run entrypoint.prod.sh
ENTRYPOINT ["/home/djtinker/web/entrypoint.prod.sh"]
